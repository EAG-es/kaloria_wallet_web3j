package innui.web3j.generated.contracts;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Int256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple3;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.9.8.
 */
@SuppressWarnings("rawtypes")
public class Minibases extends Contract {
    public static final String BINARY = "60806040526001805460ff1916811790553480156200001d57600080fd5b506040805160808101825260606020808301828152600084860152828401929092523383528351808501855260048152631c9bdbdd60e21b918101919091529052905169726f6f745f636c61766560b01b8152600290600a01602060405180830381855afa15801562000094573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190620000b991906200023f565b6040828101919091528051600180825281830190925290602080830190803683375050506060820181905280516d7065726d69736f5f6d6178696d6f60901b91906000906200010c576200010c6200026f565b60209081029190910181019190915260008054600181018255908052825160049091027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563810180546001600160a01b039093166001600160a01b03199093169290921782559183015183927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5640190620001a6908262000314565b506040820151600282015560608201518051620001ce916003840191602090910190620001d8565b50505050620003e0565b82805482825590600052602060002090810192821562000216579160200282015b8281111562000216578251825591602001919060010190620001f9565b506200022492915062000228565b5090565b5b8082111562000224576000815560010162000229565b6000602082840312156200025257600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600181811c908216806200029a57607f821691505b602082108103620002bb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200030f57600081815260208120601f850160051c81016020861015620002ea5750805b601f850160051c820191505b818110156200030b57828155600101620002f6565b5050505b505050565b81516001600160401b0381111562000330576200033062000259565b620003488162000341845462000285565b84620002c1565b602080601f831160018114620003805760008415620003675750858301515b600019600386901b1c1916600185901b1785556200030b565b600085815260208120601f198616915b82811015620003b15788860151825594840194600190910190840162000390565b5085821015620003d05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61147180620003f06000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063a9a4079c11610071578063a9a4079c1461015b578063b2be353c1461016e578063b776a7a214610176578063c49c3d051461017e578063e3dbc94414610186578063f9d06c4d1461019957600080fd5b80631d032d01146100b95780632dd47cac146100df5780634dc46437146100e9578063688e34671461010c5780637b318b6e146101265780638e3ee7ba14610139575b600080fd5b6100cc6100c7366004610df2565b6101ac565b6040519081526020015b60405180910390f35b6100e7610297565b005b6100fc6100f7366004610df2565b6102d4565b60405190151581526020016100d6565b6001546101199060ff1681565b6040516100d69190610e2a565b6100e7610134366004610ef5565b61033c565b61014c610147366004610f7a565b61051c565b6040516100d693929190610fb7565b6100e7610169366004611001565b6105e4565b6100e761080f565b6100e761096c565b6100e76109a3565b6100e7610194366004611075565b6109dc565b6100e76101a7366004610df2565b610b0e565b60008060015460ff1660028111156101c6576101c6610e14565b146102185760405162461bcd60e51b815260206004820152601c60248201527f456c20636f6e747261746f206e6f20657374c3a12061637469766f2e0000000060448201526064015b60405180910390fd5b6000805b6000548110156102785760008181548110610239576102396110e9565b60009182526020909120600490910201546001600160a01b03908116908516036102665760019150610278565b610271816001611115565b905061021c565b81156102875791506102929050565b506000199392505050565b919050565b336102a1816102d4565b6102bd5760405162461bcd60e51b815260040161020f9061112e565b600180546000919060ff191681835b021790555050565b600080805b60005481101561033557600081815481106102f6576102f66110e9565b60009182526020909120600490910201546001600160a01b03908116908516036103235760019150610335565b61032e816001611115565b90506102d9565b5092915050565b33610346816102d4565b6103625760405162461bcd60e51b815260040161020f9061112e565b6000546002106103da5760405162461bcd60e51b815260206004820152603e60248201527f536f6c6f207365207065726d6974652061637475616c697a617220736920686160448201527f79206d617320646520646f732061646d696e6973747261646f7265732e200000606482015260840161020f565b60006103e5866101ac565b905060008112156104085760405162461bcd60e51b815260040161020f90611175565b845115610442578460008281548110610423576104236110e9565b906000526020600020906004020160010190816104409190611242565b505b8351156104c2576002846040516104599190611302565b602060405180830381855afa158015610476573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610499919061131e565b600082815481106104ac576104ac6110e9565b9060005260206000209060040201600201819055505b6001600160a01b038316156105145782600082815481106104e5576104e56110e9565b6000918252602090912060049091020180546001600160a01b0319166001600160a01b03929092169190911790555b505050505050565b6000818154811061052c57600080fd5b6000918252602090912060049091020180546001820180546001600160a01b0390921693509061055b906111bd565b80601f0160208091040260200160405190810160405280929190818152602001828054610587906111bd565b80156105d45780601f106105a9576101008083540402835291602001916105d4565b820191906000526020600020905b8154815290600101906020018083116105b757829003601f168201915b5050505050908060020154905083565b336105ee816102d4565b61060a5760405162461bcd60e51b815260040161020f9061112e565b6000805b60005481101561066a576000818154811061062b5761062b6110e9565b60009182526020909120600490910201546001600160a01b0390811690871603610658576001915061066a565b610663816001611115565b905061060e565b81156106d65760405162461bcd60e51b815260206004820152603560248201527f4573612064697265636369c3b36e2064652061646d696e6973747261646f722060448201527403cb09032b9ba61d0903932b3b4b9ba3930b230971605d1b606482015260840161020f565b604080516080810182526000818301526060808201526001600160a01b038816815260208101879052905160029061070f908790611302565b602060405180830381855afa15801561072c573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061074f919061131e565b60408201526000805460018101825590805281517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563600490920291820180546001600160a01b0319166001600160a01b03909216919091178155602083015183927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56401906107dd9082611242565b506040820151600282015560608201518051610803916003840191602090910190610ce4565b50505050505050505050565b33610819816102d4565b6108355760405162461bcd60e51b815260040161020f9061112e565b6000610840336101ac565b905060008112156108635760405162461bcd60e51b815260040161020f90611175565b6000805461087390600190611337565b81548110610883576108836110e9565b9060005260206000209060040201600082815481106108a4576108a46110e9565b60009182526020909120825460049092020180546001600160a01b0319166001600160a01b039092169190911781556001808201906108e59084018261134a565b50600282015481600201556003820181600301908054610906929190610d2f565b50905050600080548061091b5761091b611425565b60008281526020812060046000199093019283020180546001600160a01b03191681559061094c6001830182610d6f565b60028201600090556003820160006109649190610dac565b505090555050565b33610976816102d4565b6109925760405162461bcd60e51b815260040161020f9061112e565b60018054819060ff191681806102cc565b336109ad816102d4565b6109c95760405162461bcd60e51b815260040161020f9061112e565b600180546002919060ff191681836102cc565b336109e6816102d4565b610a025760405162461bcd60e51b815260040161020f9061112e565b336000610a0e826101ac565b90506000811215610a315760405162461bcd60e51b815260040161020f90611175565b855115610a6b578560008281548110610a4c57610a4c6110e9565b90600052602060002090600402016001019081610a699190611242565b505b845115610aeb57600285604051610a829190611302565b602060405180830381855afa158015610a9f573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610ac2919061131e565b60008281548110610ad557610ad56110e9565b9060005260206000209060040201600201819055505b6001600160a01b038416156105145783600082815481106104e5576104e56110e9565b33610b18816102d4565b610b345760405162461bcd60e51b815260040161020f9061112e565b600054600210610bac5760405162461bcd60e51b815260206004820152603a60248201527f536f6c6f207365207065726d69746520626f7272617220736920686179206d6160448201527f7320646520646f732061646d696e6973747261646f7265732e20000000000000606482015260840161020f565b6000610bb7836101ac565b90506000811215610bda5760405162461bcd60e51b815260040161020f90611175565b60008054610bea90600190611337565b81548110610bfa57610bfa6110e9565b906000526020600020906004020160008281548110610c1b57610c1b6110e9565b60009182526020909120825460049092020180546001600160a01b0319166001600160a01b03909216919091178155600180820190610c5c9084018261134a565b50600282015481600201556003820181600301908054610c7d929190610d2f565b509050506000805480610c9257610c92611425565b60008281526020812060046000199093019283020180546001600160a01b031916815590610cc36001830182610d6f565b6002820160009055600382016000610cdb9190610dac565b50509055505050565b828054828255906000526020600020908101928215610d1f579160200282015b82811115610d1f578251825591602001919060010190610d04565b50610d2b929150610dc6565b5090565b828054828255906000526020600020908101928215610d1f5760005260206000209182015b82811115610d1f578254825591600101919060010190610d54565b508054610d7b906111bd565b6000825580601f10610d8b575050565b601f016020900490600052602060002090810190610da99190610dc6565b50565b5080546000825590600052602060002090810190610da991905b5b80821115610d2b5760008155600101610dc7565b80356001600160a01b038116811461029257600080fd5b600060208284031215610e0457600080fd5b610e0d82610ddb565b9392505050565b634e487b7160e01b600052602160045260246000fd5b6020810160038310610e4c57634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610e7957600080fd5b813567ffffffffffffffff80821115610e9457610e94610e52565b604051601f8301601f19908116603f01168101908282118183101715610ebc57610ebc610e52565b81604052838152866020858801011115610ed557600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215610f0b57600080fd5b610f1485610ddb565b9350602085013567ffffffffffffffff80821115610f3157600080fd5b610f3d88838901610e68565b94506040870135915080821115610f5357600080fd5b50610f6087828801610e68565b925050610f6f60608601610ddb565b905092959194509250565b600060208284031215610f8c57600080fd5b5035919050565b60005b83811015610fae578181015183820152602001610f96565b50506000910152565b60018060a01b03841681526060602082015260008351806060840152610fe4816080850160208801610f93565b604083019390935250601f91909101601f19160160800192915050565b60008060006060848603121561101657600080fd5b61101f84610ddb565b9250602084013567ffffffffffffffff8082111561103c57600080fd5b61104887838801610e68565b9350604086013591508082111561105e57600080fd5b5061106b86828701610e68565b9150509250925092565b60008060006060848603121561108a57600080fd5b833567ffffffffffffffff808211156110a257600080fd5b6110ae87838801610e68565b945060208601359150808211156110c457600080fd5b506110d186828701610e68565b9250506110e060408501610ddb565b90509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115611128576111286110ff565b92915050565b60208082526027908201527f4c6120646972656363696f6e206e6f20657320646520756e2061646d696e69736040820152663a3930b237b91760c91b606082015260800190565b60208082526028908201527f4c6120646972656363696f6e206e6f20657320646520756e2061646d696e697360408201526703a3930b237b917160c51b606082015260800190565b600181811c908216806111d157607f821691505b6020821081036111f157634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561123d57600081815260208120601f850160051c8101602086101561121e5750805b601f850160051c820191505b818110156105145782815560010161122a565b505050565b815167ffffffffffffffff81111561125c5761125c610e52565b6112708161126a84546111bd565b846111f7565b602080601f8311600181146112a5576000841561128d5750858301515b600019600386901b1c1916600185901b178555610514565b600085815260208120601f198616915b828110156112d4578886015182559484019460019091019084016112b5565b50858210156112f25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251611314818460208701610f93565b9190910192915050565b60006020828403121561133057600080fd5b5051919050565b81810381811115611128576111286110ff565b818103611355575050565b61135f82546111bd565b67ffffffffffffffff81111561137757611377610e52565b6113858161126a84546111bd565b6000601f8211600181146113b957600083156113a15750848201545b600019600385901b1c1916600184901b17845561141e565b600085815260209020601f19841690600086815260209020845b838110156113f357828601548255600195860195909101906020016113d3565b50858310156114115781850154600019600388901b60f8161c191681555b50505060018360011b0184555b5050505050565b634e487b7160e01b600052603160045260246000fdfea264697066735822122018ab3641aba4344abd341263970c85de941cf60264f2bc11ca1f63b65036e77664736f6c63430008110033";

    public static final String FUNC_ACL_ARRAY = "acl_array";

    public static final String FUNC_ACTIVAR = "activar";

    public static final String FUNC_actualizar_administrador_usuario_clave_direccion = "actualizar_administrador_usuario_clave_direccion";

    public static final String FUNC_borrar_administrador = "borrar_administrador";

    public static final String FUNC_CREAR_ADMINISTRADOR = "crear_administrador";

    public static final String FUNC_ESTADO = "estado";

    public static final String FUNC_INACTIVAR = "inactivar";

    public static final String FUNC_LEER_ADMINISTRADOR_POS = "leer_administrador_pos";

    public static final String FUNC_LIMITAR = "limitar";

    public static final String FUNC_SER_ADMINISTRADOR = "ser_administrador";

    @Deprecated
    protected Minibases(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Minibases(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Minibases(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Minibases(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<Tuple3<String, String, byte[]>> acl_array(BigInteger param0) {
        final Function function = new Function(FUNC_ACL_ARRAY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Bytes32>() {}));
        return new RemoteFunctionCall<Tuple3<String, String, byte[]>>(function,
                new Callable<Tuple3<String, String, byte[]>>() {
                    @Override
                    public Tuple3<String, String, byte[]> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<String, String, byte[]>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (byte[]) results.get(2).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> activar() {
        final Function function = new Function(
                FUNC_ACTIVAR, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> actualizar_administrador_usuario_clave_direccion(String direccion, String usuario, byte[] clave, String nueva_direccion) {
        final Function function = new Function(
                FUNC_actualizar_administrador_usuario_clave_direccion, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion), 
                new org.web3j.abi.datatypes.Utf8String(usuario), 
                new org.web3j.abi.datatypes.DynamicBytes(clave), 
                new org.web3j.abi.datatypes.Address(160, nueva_direccion)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> actualizar_administrador_usuario_clave_direccion(String usuario, byte[] clave, String nueva_direccion) {
        final Function function = new Function(
                FUNC_actualizar_administrador_usuario_clave_direccion, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(usuario), 
                new org.web3j.abi.datatypes.DynamicBytes(clave), 
                new org.web3j.abi.datatypes.Address(160, nueva_direccion)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> borrar_administrador() {
        final Function function = new Function(
                FUNC_borrar_administrador, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> borrar_administrador(String direccion) {
        final Function function = new Function(
                FUNC_borrar_administrador, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> crear_administrador(String direccion, String usuario, byte[] clave) {
        final Function function = new Function(
                FUNC_CREAR_ADMINISTRADOR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion), 
                new org.web3j.abi.datatypes.Utf8String(usuario), 
                new org.web3j.abi.datatypes.DynamicBytes(clave)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> estado() {
        final Function function = new Function(FUNC_ESTADO, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> inactivar() {
        final Function function = new Function(
                FUNC_INACTIVAR, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> leer_administrador_pos(String direccion) {
        final Function function = new Function(FUNC_LEER_ADMINISTRADOR_POS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> limitar() {
        final Function function = new Function(
                FUNC_LIMITAR, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> ser_administrador(String direccion) {
        final Function function = new Function(FUNC_SER_ADMINISTRADOR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    @Deprecated
    public static Minibases load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Minibases(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Minibases load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Minibases(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Minibases load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Minibases(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Minibases load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Minibases(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Minibases> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Minibases.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<Minibases> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Minibases.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Minibases> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Minibases.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Minibases> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Minibases.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}
