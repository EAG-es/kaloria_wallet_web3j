package innui.web3j.generated.contracts;

import io.reactivex.Flowable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Int256;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple3;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.9.8.
 */
@SuppressWarnings("rawtypes")
public class Direcciones_emails_mapas extends Contract {
    public static final String BINARY = "60806040526001805460ff1916811790553480156200001d57600080fd5b50600080516020620042be8339815191526040516200006d9060208082526018908201527f6d696e696261736573202d3e20636f6e7374727563746f720000000000000000604082015260600190565b60405180910390a16040805160808101825260606020808301828152600084860152828401929092523383528351808501855260048152631c9bdbdd60e21b918101919091529052905169726f6f745f636c61766560b01b8152600290600a01602060405180830381855afa158015620000eb573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906200011091906200041f565b6040828101919091528051600180825281830190925290602080830190803683375050506060820181905280516d7065726d69736f5f6d6178696d6f60901b91906000906200016357620001636200044f565b60209081029190910181019190915260008054600181018255908052825160049091027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563810180546001600160a01b039093166001600160a01b03199093169290921782559183015183927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5640190620001fd9082620004f4565b506040820151600282015560608201518051620002259160038401916020909101906200039c565b50505050600080516020620042be833981519152604051620002879060208082526026908201527f62696172696d617061735f61645f73745f73745f616473202d3e20636f6e7374604082015265393ab1ba37b960d11b606082015260800190565b60405180910390a16040516200029d90620003ec565b604051809103906000f080158015620002ba573d6000803e3d6000fd5b506001806101000a8154816001600160a01b0302191690836001600160a01b03160217905550604051620002ee90620003fa565b604051809103906000f0801580156200030b573d6000803e3d6000fd5b50600280546001600160a01b03929092166001600160a01b0319909216919091179055604051600080516020620042be833981519152906200038e9060208082526027908201527f646972656363696f6e65735f656d61696c735f6d61706173202d3e20636f6e736040820152663a393ab1ba37b960c91b606082015260800190565b60405180910390a1620005c0565b828054828255906000526020600020908101928215620003da579160200282015b82811115620003da578251825591602001919060010190620003bd565b50620003e892915062000408565b5090565b610a918062002a6083390190565b610dcd80620034f183390190565b5b80821115620003e8576000815560010162000409565b6000602082840312156200043257600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600181811c908216806200047a57607f821691505b6020821081036200049b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004ef57600081815260208120601f850160051c81016020861015620004ca5750805b601f850160051c820191505b81811015620004eb57828155600101620004d6565b5050505b505050565b81516001600160401b0381111562000510576200051062000439565b620005288162000521845462000465565b84620004a1565b602080601f831160018114620005605760008415620005475750858301515b600019600386901b1c1916600185901b178555620004eb565b600085815260208120601f198616915b82811015620005915788860151825594840194600190910190840162000570565b5085821015620005b05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61249080620005d06000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c8063879d541a1161011a578063c49c3d05116100ad578063ec72a5db1161007c578063ec72a5db14610445578063f5a5713614610458578063f9c99f7914610460578063f9d06c4d14610478578063fde12e311461048b57600080fd5b8063c49c3d0514610404578063cabbdd321461040c578063d0dac2631461041f578063e3dbc9441461043257600080fd5b8063a9a4079c116100e9578063a9a4079c146103ce578063b2be353c146103e1578063b776a7a2146103e9578063ba19f56f146103f157600080fd5b8063879d541a146103735780638e3ee7ba146103865780639570c475146103a8578063a1a04952146103bb57600080fd5b806363ef0c201161019d5780636bb9d38a1161016c5780636bb9d38a1461031f5780636c92cef314610332578063715a0ae91461034557806378500f121461034d5780637b318b6e1461036057600080fd5b806363ef0c20146102bf57806364b1e3e8146102ea57806366753808146102f2578063688e34671461030557600080fd5b80634dc46437116101d95780634dc4643714610256578063561088ab14610279578063590331d11461028c5780635a701bcc146102ac57600080fd5b80631d032d011461020b5780632b59d1fc146102315780632d4adcd91461023b5780632dd47cac1461024e575b600080fd5b61021e610219366004611c47565b61049e565b6040519081526020015b60405180910390f35b61023961055d565b005b610239610249366004611d30565b6105a0565b6102396105e5565b610269610264366004611c47565b610620565b6040519015158152602001610228565b610239610287366004611d6d565b610688565b61029f61029a366004611dbd565b6106f5565b6040516102289190611e26565b6102396102ba366004611d30565b61072b565b6102d26102cd366004611d30565b610761565b6040516001600160a01b039091168152602001610228565b61021e6107a1565b610269610300366004611d30565b6107d5565b6001546103129060ff1681565b6040516102289190611e4f565b61023961032d366004611c47565b610847565b610239610340366004611d30565b610875565b6102396109b4565b61029f61035b366004611c47565b6109e3565b61023961036e366004611e77565b610a24565b6102d2610381366004611dbd565b610c02565b610399610394366004611dbd565b610c32565b60405161022893929190611f00565b6002546102d2906001600160a01b031681565b6102396103c9366004611d6d565b610cfa565b6102396103dc366004611f34565b610d29565b610239610f50565b6102396110ab565b61029f6103ff366004611dbd565b6110e1565b610239611154565b61026961041a366004611d30565b61118c565b61029f61042d366004611c47565b6111cc565b610239610440366004611faa565b611204565b610269610453366004611c47565b611335565b61021e611375565b6001546102d29061010090046001600160a01b031681565b610239610486366004611c47565b6113b3565b610239610499366004611d30565b611587565b60008060015460ff1660028111156104b8576104b8611e39565b146104de5760405162461bcd60e51b81526004016104d590612022565b60405180910390fd5b6000805b60005481101561053e57600081815481106104ff576104ff612059565b60009182526020909120600490910201546001600160a01b039081169085160361052c576001915061053e565b610537816001612085565b90506104e2565b811561054d5791506105589050565b506000199392505050565b919050565b600060015460ff16600281111561057657610576611e39565b146105935760405162461bcd60e51b81526004016104d590612022565b3361059d816115b5565b50565b600060015460ff1660028111156105b9576105b9611e39565b146105d65760405162461bcd60e51b81526004016104d590612022565b336105e181836116c5565b5050565b6105ee33610620565b61060a5760405162461bcd60e51b81526004016104d590612098565b600180546000919060ff191681835b0217905550565b600080805b600054811015610681576000818154811061064257610642612059565b60009182526020909120600490910201546001600160a01b039081169085160361066f5760019150610681565b61067a816001612085565b9050610625565b5092915050565b61069133610620565b6106ad5760405162461bcd60e51b81526004016104d590612098565b60405162461bcd60e51b815260206004820152601860248201527f4f7065726163696f6e206e6f207065726d69746964612e20000000000000000060448201526064016104d5565b606061070033610620565b61071c5760405162461bcd60e51b81526004016104d590612098565b610725826110e1565b92915050565b600060015460ff16600281111561074457610744611e39565b146106ad5760405162461bcd60e51b81526004016104d590612022565b60008060015460ff16600281111561077b5761077b611e39565b146107985760405162461bcd60e51b81526004016104d590612022565b61072582611916565b60006107ac33610620565b6107c85760405162461bcd60e51b81526004016104d590612098565b6107d0611988565b905090565b60025460405163a70fca8d60e01b81526000916001600160a01b03169063a70fca8d90610806908590600401611e26565b602060405180830381865afa158015610823573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072591906120e0565b61085033610620565b61086c5760405162461bcd60e51b81526004016104d590612098565b61059d816115b5565b600254604051634773bc3d60e01b81526000916001600160a01b031690634773bc3d906108a6908590600401611e26565b602060405180830381865afa1580156108c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e79190612102565b6002546040516385148fd360e01b81529192506001600160a01b0316906385148fd390610918908590600401611e26565b600060405180830381600087803b15801561093257600080fd5b505af1158015610946573d6000803e3d6000fd5b50506001546040516387e4c82160e01b81526001600160a01b03858116600483015261010090920490911692506387e4c82191506024015b600060405180830381600087803b15801561099857600080fd5b505af11580156109ac573d6000803e3d6000fd5b505050505050565b6109bd33610620565b6109d95760405162461bcd60e51b81526004016104d590612098565b6109e16119ff565b565b6060600060015460ff1660028111156109fe576109fe611e39565b14610a1b5760405162461bcd60e51b81526004016104d590612022565b610725826111cc565b610a2d33610620565b610a495760405162461bcd60e51b81526004016104d590612098565b600054600210610ac15760405162461bcd60e51b815260206004820152603e60248201527f536f6c6f207365207065726d6974652061637475616c697a617220736920686160448201527f79206d617320646520646f732061646d696e6973747261646f7265732e20000060648201526084016104d5565b6000610acc8561049e565b90506000811215610aef5760405162461bcd60e51b81526004016104d590612098565b835115610b29578360008281548110610b0a57610b0a612059565b90600052602060002090600402016001019081610b2791906121a4565b505b825115610ba957600283604051610b409190612264565b602060405180830381855afa158015610b5d573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610b809190612280565b60008281548110610b9357610b93612059565b9060005260206000209060040201600201819055505b6001600160a01b03821615610bfb578160008281548110610bcc57610bcc612059565b6000918252602090912060049091020180546001600160a01b0319166001600160a01b03929092169190911790555b5050505050565b6000610c0d33610620565b610c295760405162461bcd60e51b81526004016104d590612098565b61072582611acf565b60008181548110610c4257600080fd5b6000918252602090912060049091020180546001820180546001600160a01b03909216935090610c719061211f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9d9061211f565b8015610cea5780601f10610cbf57610100808354040283529160200191610cea565b820191906000526020600020905b815481529060010190602001808311610ccd57829003601f168201915b5050505050908060020154905083565b610d0333610620565b610d1f5760405162461bcd60e51b81526004016104d590612098565b6105e182826116c5565b610d3233610620565b610d4e5760405162461bcd60e51b81526004016104d590612098565b6000805b600054811015610dae5760008181548110610d6f57610d6f612059565b60009182526020909120600490910201546001600160a01b0390811690861603610d9c5760019150610dae565b610da7816001612085565b9050610d52565b8115610e185760405162461bcd60e51b815260206004820152603360248201527f45736120646972656363696f6e2064652061646d696e6973747261646f7220796044820152720309032b9ba30903932b3b4b9ba3930b230971606d1b60648201526084016104d5565b604080516080810182526000818301526060808201526001600160a01b0387168152602081018690529051600290610e51908690612264565b602060405180830381855afa158015610e6e573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610e919190612280565b60408201526000805460018101825590805281517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563600490920291820180546001600160a01b0319166001600160a01b03909216919091178155602083015183927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5640190610f1f90826121a4565b506040820151600282015560608201518051610f45916003840191602090910190611b3e565b505050505050505050565b610f5933610620565b610f755760405162461bcd60e51b81526004016104d590612098565b6000610f803361049e565b90506000811215610fa35760405162461bcd60e51b81526004016104d590612098565b60008054610fb390600190612299565b81548110610fc357610fc3612059565b906000526020600020906004020160008281548110610fe457610fe4612059565b60009182526020909120825460049092020180546001600160a01b0319166001600160a01b03909216919091178155600180820190611025908401826122ac565b50600282015481600201556003820181600301908054611046929190611b89565b50905050600080548061105b5761105b61237f565b60008281526020812060046000199093019283020180546001600160a01b03191681559061108c6001830182611bc9565b60028201600090556003820160006110a49190611c03565b5050905550565b6110b433610620565b6110d05760405162461bcd60e51b81526004016104d590612098565b60018054819060ff19168180610619565b600254604051633e62601d60e01b8152600481018390526060916001600160a01b031690633e62601d906024015b600060405180830381865afa15801561112c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107259190810190612395565b61115d33610620565b6111795760405162461bcd60e51b81526004016104d590612098565b600180546002919060ff19168183610619565b60008060015460ff1660028111156111a6576111a6611e39565b146111c35760405162461bcd60e51b81526004016104d590612022565b610725826107d5565b600154604051632c2b369760e21b81526001600160a01b0383811660048301526060926101009004169063b0acda5c9060240161110f565b61120d33610620565b6112295760405162461bcd60e51b81526004016104d590612098565b3360006112358261049e565b905060008112156112585760405162461bcd60e51b81526004016104d590612098565b84511561129257846000828154811061127357611273612059565b9060005260206000209060040201600101908161129091906121a4565b505b835115611312576002846040516112a99190612264565b602060405180830381855afa1580156112c6573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906112e99190612280565b600082815481106112fc576112fc612059565b9060005260206000209060040201600201819055505b6001600160a01b03831615610bfb578260008281548110610bcc57610bcc612059565b60008060015460ff16600281111561134f5761134f611e39565b1461136c5760405162461bcd60e51b81526004016104d590612022565b61072582611b06565b60008060015460ff16600281111561138f5761138f611e39565b146113ac5760405162461bcd60e51b81526004016104d590612022565b5060005490565b6113bc33610620565b6113d85760405162461bcd60e51b81526004016104d590612098565b6000546002106114505760405162461bcd60e51b815260206004820152603a60248201527f536f6c6f207365207065726d69746520626f7272617220736920686179206d6160448201527f7320646520646f732061646d696e6973747261646f7265732e2000000000000060648201526084016104d5565b600061145b8261049e565b9050600081121561147e5760405162461bcd60e51b81526004016104d590612098565b6000805461148e90600190612299565b8154811061149e5761149e612059565b9060005260206000209060040201600082815481106114bf576114bf612059565b60009182526020909120825460049092020180546001600160a01b0319166001600160a01b03909216919091178155600180820190611500908401826122ac565b50600282015481600201556003820181600301908054611521929190611b89565b5090505060008054806115365761153661237f565b60008281526020812060046000199093019283020180546001600160a01b0319168155906115676001830182611bc9565b600282016000905560038201600061157f9190611c03565b505090555050565b61159033610620565b6115ac5760405162461bcd60e51b81526004016104d590612098565b61059d81610875565b600154604051632c2b369760e21b81526001600160a01b0383811660048301526000926101009004169063b0acda5c90602401600060405180830381865afa158015611605573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261162d9190810190612395565b6001546040516387e4c82160e01b81526001600160a01b038581166004830152929350610100909104909116906387e4c82190602401600060405180830381600087803b15801561167d57600080fd5b505af1158015611691573d6000803e3d6000fd5b50506002546040516385148fd360e01b81526001600160a01b0390911692506385148fd3915061097e908490600401611e26565b6001546040516374afc8d760e01b81526001600160a01b038481166004830152610100909204909116906374afc8d790602401602060405180830381865afa158015611715573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173991906120e0565b156117a25760405162461bcd60e51b815260206004820152603360248201527f4c6120646972656363696f6e207961206861207369646f206372656164612028604482015272032b9ba30b934b0903932b832ba34b23094971606d1b60648201526084016104d5565b60025460405163a70fca8d60e01b81526001600160a01b039091169063a70fca8d906117d2908490600401611e26565b602060405180830381865afa1580156117ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061181391906120e0565b1561187c5760405162461bcd60e51b815260206004820152603360248201527f456c20746578746f207961206861207369646f207574696c697a61646f2e2028604482015272032b9ba30b934b0903932b832ba34b23794971606d1b60648201526084016104d5565b6001546040516350d024a960e11b81526101009091046001600160a01b03169063a1a04952906118b2908590859060040161240c565b600060405180830381600087803b1580156118cc57600080fd5b505af11580156118e0573d6000803e3d6000fd5b505060025460405163cf1be57160e01b81526001600160a01b03909116925063cf1be571915061097e9084908690600401612430565b600254604051634773bc3d60e01b81526000916001600160a01b031690634773bc3d90611947908590600401611e26565b602060405180830381865afa158015611964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107259190612102565b600060018054906101000a90046001600160a01b03166001600160a01b03166364b1e3e86040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d09190612280565b600260009054906101000a90046001600160a01b03166001600160a01b031663715a0ae96040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611a4f57600080fd5b505af1158015611a63573d6000803e3d6000fd5b5050505060018054906101000a90046001600160a01b03166001600160a01b031663715a0ae96040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611ab557600080fd5b505af1158015611ac9573d6000803e3d6000fd5b50505050565b600154604051633e62601d60e01b81526004810183905260009161010090046001600160a01b031690633e62601d90602401611947565b6001546040516374afc8d760e01b81526001600160a01b038381166004830152600092610100900416906374afc8d790602401610806565b828054828255906000526020600020908101928215611b79579160200282015b82811115611b79578251825591602001919060010190611b5e565b50611b85929150611c1d565b5090565b828054828255906000526020600020908101928215611b795760005260206000209182015b82811115611b79578254825591600101919060010190611bae565b508054611bd59061211f565b6000825580601f10611be5575050565b601f01602090049060005260206000209081019061059d9190611c1d565b508054600082559060005260206000209081019061059d91905b5b80821115611b855760008155600101611c1e565b6001600160a01b038116811461059d57600080fd5b600060208284031215611c5957600080fd5b8135611c6481611c32565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611caa57611caa611c6b565b604052919050565b600067ffffffffffffffff821115611ccc57611ccc611c6b565b50601f01601f191660200190565b600082601f830112611ceb57600080fd5b8135611cfe611cf982611cb2565b611c81565b818152846020838601011115611d1357600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215611d4257600080fd5b813567ffffffffffffffff811115611d5957600080fd5b611d6584828501611cda565b949350505050565b60008060408385031215611d8057600080fd5b8235611d8b81611c32565b9150602083013567ffffffffffffffff811115611da757600080fd5b611db385828601611cda565b9150509250929050565b600060208284031215611dcf57600080fd5b5035919050565b60005b83811015611df1578181015183820152602001611dd9565b50506000910152565b60008151808452611e12816020860160208601611dd6565b601f01601f19169290920160200192915050565b602081526000611c646020830184611dfa565b634e487b7160e01b600052602160045260246000fd5b6020810160038310611e7157634e487b7160e01b600052602160045260246000fd5b91905290565b60008060008060808587031215611e8d57600080fd5b8435611e9881611c32565b9350602085013567ffffffffffffffff80821115611eb557600080fd5b611ec188838901611cda565b94506040870135915080821115611ed757600080fd5b50611ee487828801611cda565b9250506060850135611ef581611c32565b939692955090935050565b6001600160a01b0384168152606060208201819052600090611f2490830185611dfa565b9050826040830152949350505050565b600080600060608486031215611f4957600080fd5b8335611f5481611c32565b9250602084013567ffffffffffffffff80821115611f7157600080fd5b611f7d87838801611cda565b93506040860135915080821115611f9357600080fd5b50611fa086828701611cda565b9150509250925092565b600080600060608486031215611fbf57600080fd5b833567ffffffffffffffff80821115611fd757600080fd5b611fe387838801611cda565b94506020860135915080821115611ff957600080fd5b5061200686828701611cda565b925050604084013561201781611c32565b809150509250925092565b6020808252601b908201527f456c20636f6e747261746f206e6f20657374612061637469766f2e0000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156107255761072561206f565b60208082526028908201527f4c6120646972656363696f6e206e6f20657320646520756e2061646d696e697360408201526703a3930b237b917160c51b606082015260800190565b6000602082840312156120f257600080fd5b81518015158114611c6457600080fd5b60006020828403121561211457600080fd5b8151611c6481611c32565b600181811c9082168061213357607f821691505b60208210810361215357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561219f57600081815260208120601f850160051c810160208610156121805750805b601f850160051c820191505b818110156109ac5782815560010161218c565b505050565b815167ffffffffffffffff8111156121be576121be611c6b565b6121d2816121cc845461211f565b84612159565b602080601f83116001811461220757600084156121ef5750858301515b600019600386901b1c1916600185901b1785556109ac565b600085815260208120601f198616915b8281101561223657888601518255948401946001909101908401612217565b50858210156122545787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251612276818460208701611dd6565b9190910192915050565b60006020828403121561229257600080fd5b5051919050565b818103818111156107255761072561206f565b8181036122b7575050565b6122c1825461211f565b67ffffffffffffffff8111156122d9576122d9611c6b565b6122e7816121cc845461211f565b6000601f82116001811461231b57600083156123035750848201545b600019600385901b1c1916600184901b178455610bfb565b600085815260209020601f19841690600086815260209020845b838110156123555782860154825560019586019590910190602001612335565b50858310156122545793015460001960f8600387901b161c19169092555050600190811b01905550565b634e487b7160e01b600052603160045260246000fd5b6000602082840312156123a757600080fd5b815167ffffffffffffffff8111156123be57600080fd5b8201601f810184136123cf57600080fd5b80516123dd611cf982611cb2565b8181528560208385010111156123f257600080fd5b612403826020830160208601611dd6565b95945050505050565b6001600160a01b0383168152604060208201819052600090611d6590830184611dfa565b6040815260006124436040830185611dfa565b905060018060a01b0383166020830152939250505056fea2646970667358221220438d2f98c03fa49d1093c006736861473f60c09d2cbaec17b88d783fd290a27464736f6c63430008110033608060405234801561001057600080fd5b507fa3c796c1157c3cb9fb6f34e43d73431e67f443a38176c32c7dd3b91e15009167604051610070906020808252601e908201527f6172696d617061735f61645f737473202d3e20636f6e7374727563746f720000604082015260600190565b60405180910390a1610a0a806100876000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806374afc8d71161006657806374afc8d71461011457806387e4c82114610137578063a1a049521461014a578063b0acda5c1461015d578063c11879691461017d57600080fd5b806338d94193146100a35780633e62601d146100d3578063561088ab146100e657806364b1e3e8146100fb578063715a0ae91461010c575b600080fd5b6100b66100b136600461067a565b610190565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b66100e136600461067a565b6101ba565b6100f96100f43660046106c5565b61023e565b005b6000546040519081526020016100ca565b6100f961024c565b610127610122366004610787565b6102e1565b60405190151581526020016100ca565b6100f9610145366004610787565b61034d565b6100f96101583660046106c5565b61046b565b61017061016b366004610787565b6104de565b6040516100ca91906107a9565b61017061018b366004610787565b61058a565b600081815481106101a057600080fd5b6000918252602090912001546001600160a01b0316905081565b6000805482106102105760405162461bcd60e51b815260206004820152601960248201527f506f736963696f6e2066756572612064652072616e676f2e2000000000000000604482015260640160405180910390fd5b60008281548110610223576102236107f7565b6000918252602090912001546001600160a01b031692915050565b610248828261046b565b5050565b600054805b61025c600182610823565b905060008112610248576001600080838154811061027c5761027c6107f7565b60009182526020808320909101546001600160a01b0316835282019290925260400181206102a991610624565b60008054806102ba576102ba61084a565b600082815260209020810160001990810180546001600160a01b0319169055019055610251565b6000805481905b8082101561034357836001600160a01b03166000838154811061030d5761030d6107f7565b6000918252602090912001546001600160a01b031603610331575060019392505050565b61033c826001610860565b91506102e8565b5060009392505050565b6001600160a01b038116600090815260016020526040812061036e91610624565b600080545b8082101561046657826001600160a01b031660008381548110610398576103986107f7565b6000918252602090912001546001600160a01b0316036104545760006103bf600183610879565b815481106103cf576103cf6107f7565b600091825260208220015481546001600160a01b039091169190849081106103f9576103f96107f7565b6000918252602082200180546001600160a01b0319166001600160a01b0393909316929092179091558054806104315761043161084a565b600082815260209020810160001990810180546001600160a01b03191690550190555b61045f826001610860565b9150610373565b505050565b6001600160a01b038216600090815260016020526040902061048d8282610914565b5050600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081526001602052604090208054606091906105059061088c565b80601f01602080910402602001604051908101604052809291908181526020018280546105319061088c565b801561057e5780601f106105535761010080835404028352916020019161057e565b820191906000526020600020905b81548152906001019060200180831161056157829003601f168201915b50505050509050919050565b600160205260009081526040902080546105a39061088c565b80601f01602080910402602001604051908101604052809291908181526020018280546105cf9061088c565b801561061c5780601f106105f15761010080835404028352916020019161061c565b820191906000526020600020905b8154815290600101906020018083116105ff57829003601f168201915b505050505081565b5080546106309061088c565b6000825580601f10610640575050565b601f01602090049060005260206000209081019061065e9190610661565b50565b5b808211156106765760008155600101610662565b5090565b60006020828403121561068c57600080fd5b5035919050565b80356001600160a01b03811681146106aa57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156106d857600080fd5b6106e183610693565b9150602083013567ffffffffffffffff808211156106fe57600080fd5b818501915085601f83011261071257600080fd5b813581811115610724576107246106af565b604051601f8201601f19908116603f0116810190838211818310171561074c5761074c6106af565b8160405282815288602084870101111561076557600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561079957600080fd5b6107a282610693565b9392505050565b600060208083528351808285015260005b818110156107d6578581018301518582016040015282016107ba565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b81810360008312801583831316838312821617156108435761084361080d565b5092915050565b634e487b7160e01b600052603160045260246000fd5b808201808211156108735761087361080d565b92915050565b818103818111156108735761087361080d565b600181811c908216806108a057607f821691505b6020821081036108c057634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561046657600081815260208120601f850160051c810160208610156108ed5750805b601f850160051c820191505b8181101561090c578281556001016108f9565b505050505050565b815167ffffffffffffffff81111561092e5761092e6106af565b6109428161093c845461088c565b846108c6565b602080601f831160018114610977576000841561095f5750858301515b600019600386901b1c1916600185901b17855561090c565b600085815260208120601f198616915b828110156109a657888601518255948401946001909101908401610987565b50858210156109c45787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220cb6c3909fabd1cd9038d70eeacdca48144ef7566e570a28f99ff205a2eb0b88d64736f6c63430008110033608060405234801561001057600080fd5b507fa3c796c1157c3cb9fb6f34e43d73431e67f443a38176c32c7dd3b91e15009167604051610070906020808252601e908201527f6172696d617061735f73745f616473202d3e20636f6e7374727563746f720000604082015260600190565b60405180910390a1610d46806100876000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063715a0ae911610066578063715a0ae91461014b57806385148fd3146101555780639bf6400c14610168578063a70fca8d1461017b578063cf1be5711461019e57600080fd5b80630b731f89146100a357806338d94193146100f45780633e62601d146101145780634773bc3d1461012757806364b1e3e81461013a575b600080fd5b6100d76100b13660046107e7565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b610107610102366004610824565b6101b1565b6040516100eb919061088d565b610107610122366004610824565b61025d565b6100d76101353660046107e7565b610362565b6000546040519081526020016100eb565b610153610393565b005b6101536101633660046107e7565b61042e565b6101536101763660046108a7565b61059b565b61018e6101893660046107e7565b6105a5565b60405190151581526020016100eb565b6101536101ac3660046108a7565b610675565b600081815481106101c157600080fd5b9060005260206000200160009150905080546101dc90610905565b80601f016020809104026020016040519081016040528092919081815260200182805461020890610905565b80156102555780601f1061022a57610100808354040283529160200191610255565b820191906000526020600020905b81548152906001019060200180831161023857829003601f168201915b505050505081565b60005460609082106102b55760405162461bcd60e51b815260206004820152601960248201527f506f736963696f6e2066756572612064652072616e676f2e2000000000000000604482015260640160405180910390fd5b600082815481106102c8576102c861093f565b9060005260206000200180546102dd90610905565b80601f016020809104026020016040519081016040528092919081815260200182805461030990610905565b80156103565780601f1061032b57610100808354040283529160200191610356565b820191906000526020600020905b81548152906001019060200180831161033957829003601f168201915b50505050509050919050565b60006001826040516103749190610955565b908152604051908190036020019020546001600160a01b031692915050565b600054805b6103a3600182610987565b90506000811261042a576001600082815481106103c2576103c261093f565b906000526020600020016040516103d991906109ae565b90815260405190819003602001902080546001600160a01b0319169055600080548061040757610407610a24565b60019003818190600052602060002001600061042391906106ee565b9055610398565b5050565b60018160405161043e9190610955565b90815260405190819003602001902080546001600160a01b0319169055600080545b808210156105965773__$b8aea4b0d65a9a3624a5e62f85f41dcce2$__6376332c2d600084815481106104955761049561093f565b90600052602060002001856040518363ffffffff1660e01b81526004016104bd929190610a3a565b602060405180830381865af41580156104da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fe9190610ad9565b15610584576000610510600183610afb565b815481106105205761052061093f565b906000526020600020016000838154811061053d5761053d61093f565b9060005260206000200190816105539190610b62565b50600080548061056557610565610a24565b60019003818190600052602060002001600061058191906106ee565b90555b61058f826001610c43565b9150610460565b505050565b61042a8282610675565b6000805481905b8082101561066b5773__$b8aea4b0d65a9a3624a5e62f85f41dcce2$__6376332c2d600084815481106105e1576105e161093f565b90600052602060002001866040518363ffffffff1660e01b8152600401610609929190610a3a565b602060405180830381865af4158015610626573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064a9190610ad9565b15610659575060019392505050565b610664826001610c43565b91506105ac565b5060009392505050565b806001836040516106869190610955565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b0319909216919091179055600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563016105968382610c56565b5080546106fa90610905565b6000825580601f1061070a575050565b601f016020900490600052602060002090810190610728919061072b565b50565b5b80821115610740576000815560010161072c565b5090565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261076b57600080fd5b813567ffffffffffffffff8082111561078657610786610744565b604051601f8301601f19908116603f011681019082821181831017156107ae576107ae610744565b816040528381528660208588010111156107c757600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156107f957600080fd5b813567ffffffffffffffff81111561081057600080fd5b61081c8482850161075a565b949350505050565b60006020828403121561083657600080fd5b5035919050565b60005b83811015610858578181015183820152602001610840565b50506000910152565b6000815180845261087981602086016020860161083d565b601f01601f19169290920160200192915050565b6020815260006108a06020830184610861565b9392505050565b600080604083850312156108ba57600080fd5b823567ffffffffffffffff8111156108d157600080fd5b6108dd8582860161075a565b92505060208301356001600160a01b03811681146108fa57600080fd5b809150509250929050565b600181811c9082168061091957607f821691505b60208210810361093957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6000825161096781846020870161083d565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b81810360008312801583831316838312821617156109a7576109a7610971565b5092915050565b60008083546109bc81610905565b600182811680156109d457600181146109e957610a18565b60ff1984168752821515830287019450610a18565b8760005260208060002060005b85811015610a0f5781548a8201529084019082016109f6565b50505082870194505b50929695505050505050565b634e487b7160e01b600052603160045260246000fd5b604081526000808454610a4c81610905565b8060408601526060600180841660008114610a6e5760018114610a8857610ab9565b60ff1985168884015283151560051b880183019550610ab9565b8960005260208060002060005b86811015610ab05781548b8201870152908401908201610a95565b8a018501975050505b50505050508281036020840152610ad08185610861565b95945050505050565b600060208284031215610aeb57600080fd5b815180151581146108a057600080fd5b81810381811115610b0e57610b0e610971565b92915050565b601f82111561059657600081815260208120601f850160051c81016020861015610b3b5750805b601f850160051c820191505b81811015610b5a57828155600101610b47565b505050505050565b818103610b6d575050565b610b778254610905565b67ffffffffffffffff811115610b8f57610b8f610744565b610ba381610b9d8454610905565b84610b14565b6000601f821160018114610bd75760008315610bbf5750848201545b600019600385901b1c1916600184901b178455610c3c565b600085815260209020601f19841690600086815260209020845b83811015610c115782860154825560019586019590910190602001610bf1565b5085831015610c2f5781850154600019600388901b60f8161c191681555b50505060018360011b0184555b5050505050565b80820180821115610b0e57610b0e610971565b815167ffffffffffffffff811115610c7057610c70610744565b610c7e81610b9d8454610905565b602080601f831160018114610cb35760008415610c9b5750858301515b600019600386901b1c1916600185901b178555610b5a565b600085815260208120601f198616915b82811015610ce257888601518255948401946001909101908401610cc3565b5085821015610d005787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212206d2a4d1a3708d4f400fb2848c90690db335a4cd874429d25226bd703eedbf2e564736f6c63430008110033a3c796c1157c3cb9fb6f34e43d73431e67f443a38176c32c7dd3b91e15009167";

    public static final String FUNC_ACL_ARRAY = "acl_array";

    public static final String FUNC_ACTIVAR = "activar";

    public static final String FUNC_actualizar = "actualizar";

    public static final String FUNC_actualizar_administrador_usuario_clave_direccion = "actualizar_administrador_usuario_clave_direccion";

    public static final String FUNC_BORRAR = "borrar";

    public static final String FUNC_borrar_administrador = "borrar_administrador";

    public static final String FUNC_BORRAR_DIRECCION = "borrar_direccion";

    public static final String FUNC_BORRAR_EMAIL = "borrar_email";

    public static final String FUNC_BORRAR_TEXTO = "borrar_texto";

    public static final String FUNC_crear = "crear";

    public static final String FUNC_CREAR_ADMINISTRADOR = "crear_administrador";

    public static final String FUNC_DIRECCIONES_TEXTOS_ARIMAPA = "direcciones_textos_arimapa";

    public static final String FUNC_ESTADO = "estado";

    public static final String FUNC_ESTAR_DIRECCION = "estar_direccion";

    public static final String FUNC_ESTAR_EMAIL = "estar_email";

    public static final String FUNC_ESTAR_TEXTO = "estar_texto";

    public static final String FUNC_INACTIVAR = "inactivar";

    public static final String FUNC_LEER_ADMINISTRADOR_POS = "leer_administrador_pos";

    public static final String FUNC_LEER_ADMINISTRADORES_NUM = "leer_administradores_num";

    public static final String FUNC_LEER_DIRECCION = "leer_direccion";

    public static final String FUNC_LEER_DIRECCIONES_POS = "leer_direcciones_pos";

    public static final String FUNC_LEER_EMAIL = "leer_email";

    public static final String FUNC_LEER_EMAILS_POS = "leer_emails_pos";

    public static final String FUNC_LEER_NUM = "leer_num";

    public static final String FUNC_LEER_TEXTO = "leer_texto";

    public static final String FUNC_LEER_TEXTOS_POS = "leer_textos_pos";

    public static final String FUNC_LIMITAR = "limitar";

    public static final String FUNC_REINICIAR = "reiniciar";

    public static final String FUNC_SER_ADMINISTRADOR = "ser_administrador";

    public static final String FUNC_TEXTOS_DIRECCIONES_ARIMAPA = "textos_direcciones_arimapa";

    public static final Event AD_AD_U_EVENT = new Event("Ad_ad_u", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Uint256>(true) {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event MENSAJE_EVENT = new Event("Mensaje", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
    ;

    public static final Event OK_EVENT = new Event("Ok", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bool>(true) {}, new TypeReference<Utf8String>() {}));
    ;

    @Deprecated
    protected Direcciones_emails_mapas(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Direcciones_emails_mapas(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Direcciones_emails_mapas(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Direcciones_emails_mapas(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static List<Ad_ad_uEventResponse> getAd_ad_uEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(AD_AD_U_EVENT, transactionReceipt);
        ArrayList<Ad_ad_uEventResponse> responses = new ArrayList<Ad_ad_uEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            Ad_ad_uEventResponse typedResponse = new Ad_ad_uEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.to = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.value = (BigInteger) eventValues.getIndexedValues().get(2).getValue();
            typedResponse.mensaje = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static Ad_ad_uEventResponse getAd_ad_uEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(AD_AD_U_EVENT, log);
        Ad_ad_uEventResponse typedResponse = new Ad_ad_uEventResponse();
        typedResponse.log = log;
        typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.to = (String) eventValues.getIndexedValues().get(1).getValue();
        typedResponse.value = (BigInteger) eventValues.getIndexedValues().get(2).getValue();
        typedResponse.mensaje = (String) eventValues.getNonIndexedValues().get(0).getValue();
        return typedResponse;
    }

    public Flowable<Ad_ad_uEventResponse> ad_ad_uEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getAd_ad_uEventFromLog(log));
    }

    public Flowable<Ad_ad_uEventResponse> ad_ad_uEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(AD_AD_U_EVENT));
        return ad_ad_uEventFlowable(filter);
    }

    public static List<MensajeEventResponse> getMensajeEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(MENSAJE_EVENT, transactionReceipt);
        ArrayList<MensajeEventResponse> responses = new ArrayList<MensajeEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            MensajeEventResponse typedResponse = new MensajeEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.mensaje = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static MensajeEventResponse getMensajeEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(MENSAJE_EVENT, log);
        MensajeEventResponse typedResponse = new MensajeEventResponse();
        typedResponse.log = log;
        typedResponse.mensaje = (String) eventValues.getNonIndexedValues().get(0).getValue();
        return typedResponse;
    }

    public Flowable<MensajeEventResponse> mensajeEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getMensajeEventFromLog(log));
    }

    public Flowable<MensajeEventResponse> mensajeEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(MENSAJE_EVENT));
        return mensajeEventFlowable(filter);
    }

    public static List<OkEventResponse> getOkEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(OK_EVENT, transactionReceipt);
        ArrayList<OkEventResponse> responses = new ArrayList<OkEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OkEventResponse typedResponse = new OkEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.es = (Boolean) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.mensaje = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static OkEventResponse getOkEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(OK_EVENT, log);
        OkEventResponse typedResponse = new OkEventResponse();
        typedResponse.log = log;
        typedResponse.es = (Boolean) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.mensaje = (String) eventValues.getNonIndexedValues().get(0).getValue();
        return typedResponse;
    }

    public Flowable<OkEventResponse> okEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getOkEventFromLog(log));
    }

    public Flowable<OkEventResponse> okEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(OK_EVENT));
        return okEventFlowable(filter);
    }

    public RemoteFunctionCall<Tuple3<String, String, byte[]>> acl_array(BigInteger param0) {
        final Function function = new Function(FUNC_ACL_ARRAY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Bytes32>() {}));
        return new RemoteFunctionCall<Tuple3<String, String, byte[]>>(function,
                new Callable<Tuple3<String, String, byte[]>>() {
                    @Override
                    public Tuple3<String, String, byte[]> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<String, String, byte[]>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (byte[]) results.get(2).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> activar() {
        final Function function = new Function(
                FUNC_ACTIVAR, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> actualizar(String direccion, String email) {
        final Function function = new Function(
                FUNC_actualizar, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion), 
                new org.web3j.abi.datatypes.Utf8String(email)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> actualizar(String email) {
        final Function function = new Function(
                FUNC_actualizar, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(email)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> actualizar_administrador_usuario_clave_direccion(String direccion, String usuario, byte[] clave, String nueva_direccion) {
        final Function function = new Function(
                FUNC_actualizar_administrador_usuario_clave_direccion, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion), 
                new org.web3j.abi.datatypes.Utf8String(usuario), 
                new org.web3j.abi.datatypes.DynamicBytes(clave), 
                new org.web3j.abi.datatypes.Address(160, nueva_direccion)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> actualizar_administrador_usuario_clave_direccion(String usuario, byte[] clave, String nueva_direccion) {
        final Function function = new Function(
                FUNC_actualizar_administrador_usuario_clave_direccion, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(usuario), 
                new org.web3j.abi.datatypes.DynamicBytes(clave), 
                new org.web3j.abi.datatypes.Address(160, nueva_direccion)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> borrar() {
        final Function function = new Function(
                FUNC_BORRAR, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> borrar_administrador() {
        final Function function = new Function(
                FUNC_borrar_administrador, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> borrar_administrador(String direccion) {
        final Function function = new Function(
                FUNC_borrar_administrador, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> borrar_direccion(String direccion) {
        final Function function = new Function(
                FUNC_BORRAR_DIRECCION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> borrar_email(String email) {
        final Function function = new Function(
                FUNC_BORRAR_EMAIL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(email)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> borrar_texto(String texto) {
        final Function function = new Function(
                FUNC_BORRAR_TEXTO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(texto)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> crear(String email) {
        final Function function = new Function(
                FUNC_crear, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(email)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> crear(String direccion, String email) {
        final Function function = new Function(
                FUNC_crear, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion), 
                new org.web3j.abi.datatypes.Utf8String(email)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> crear_administrador(String direccion, String usuario, byte[] clave) {
        final Function function = new Function(
                FUNC_CREAR_ADMINISTRADOR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion), 
                new org.web3j.abi.datatypes.Utf8String(usuario), 
                new org.web3j.abi.datatypes.DynamicBytes(clave)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> direcciones_textos_arimapa() {
        final Function function = new Function(FUNC_DIRECCIONES_TEXTOS_ARIMAPA, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> estado() {
        final Function function = new Function(FUNC_ESTADO, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Boolean> estar_direccion(String direccion) {
        final Function function = new Function(FUNC_ESTAR_DIRECCION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> estar_email(String email) {
        final Function function = new Function(FUNC_ESTAR_EMAIL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(email)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> estar_texto(String texto) {
        final Function function = new Function(FUNC_ESTAR_TEXTO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(texto)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> inactivar() {
        final Function function = new Function(
                FUNC_INACTIVAR, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> leer_administrador_pos(String direccion) {
        final Function function = new Function(FUNC_LEER_ADMINISTRADOR_POS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> leer_administradores_num() {
        final Function function = new Function(FUNC_LEER_ADMINISTRADORES_NUM, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<String> leer_direccion(String email) {
        final Function function = new Function(FUNC_LEER_DIRECCION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(email)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> leer_direcciones_pos(BigInteger pos) {
        final Function function = new Function(FUNC_LEER_DIRECCIONES_POS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(pos)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> leer_email(String direccion) {
        final Function function = new Function(FUNC_LEER_EMAIL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> leer_emails_pos(BigInteger pos) {
        final Function function = new Function(FUNC_LEER_EMAILS_POS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(pos)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> leer_num() {
        final Function function = new Function(FUNC_LEER_NUM, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<String> leer_texto(String direccion) {
        final Function function = new Function(FUNC_LEER_TEXTO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> leer_textos_pos(BigInteger pos) {
        final Function function = new Function(FUNC_LEER_TEXTOS_POS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(pos)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> limitar() {
        final Function function = new Function(
                FUNC_LIMITAR, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> reiniciar() {
        final Function function = new Function(
                FUNC_REINICIAR, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> ser_administrador(String direccion) {
        final Function function = new Function(FUNC_SER_ADMINISTRADOR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> textos_direcciones_arimapa() {
        final Function function = new Function(FUNC_TEXTOS_DIRECCIONES_ARIMAPA, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    @Deprecated
    public static Direcciones_emails_mapas load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Direcciones_emails_mapas(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Direcciones_emails_mapas load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Direcciones_emails_mapas(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Direcciones_emails_mapas load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Direcciones_emails_mapas(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Direcciones_emails_mapas load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Direcciones_emails_mapas(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Direcciones_emails_mapas> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Direcciones_emails_mapas.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<Direcciones_emails_mapas> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Direcciones_emails_mapas.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Direcciones_emails_mapas> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Direcciones_emails_mapas.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Direcciones_emails_mapas> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Direcciones_emails_mapas.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class Ad_ad_uEventResponse extends BaseEventResponse {
        public String from;

        public String to;

        public BigInteger value;

        public String mensaje;
    }

    public static class MensajeEventResponse extends BaseEventResponse {
        public String mensaje;
    }

    public static class OkEventResponse extends BaseEventResponse {
        public Boolean es;

        public String mensaje;
    }
}
